{"version":3,"sources":["components/Card/Card.js","components/CardList/CardList.js","components/SearchBox/SearchBox.js","App.js","index.js"],"names":["Card","monster","className","src","id","alt","name","email","CardList","monsters","map","key","SearchBox","placeholder","handleOnChange","type","onChange","App","e","setState","searchfield","target","value","state","fetch","then","res","json","this","filteredMonsters","filter","toLowerCase","includes","React","Component","ReactDOM","render","document","getElementById"],"mappings":"uWAGe,SAASA,EAAT,GAA4B,IAAZC,EAAW,EAAXA,QAC3B,OACI,yBAAKC,UAAU,kBACX,yBAAKC,IAAG,+BAA0BF,EAAQG,GAAlC,0BAA8DC,IAAI,YAC1E,4BAAKJ,EAAQK,MACb,2BAAIL,EAAQM,QCJT,SAASC,EAAT,GAAiC,IAAbC,EAAY,EAAZA,SAC/B,OACI,yBAAKP,UAAU,aACVO,EAASC,KAAI,SAAAT,GACV,OAAO,kBAACD,EAAD,CAAMW,IAAKV,EAAQG,GAAIH,QAASA,Q,MCLxC,SAASW,EAAT,GAAqD,IAAhCC,EAA+B,EAA/BA,YAAaC,EAAkB,EAAlBA,eAC7C,OACI,6BACI,2BACAZ,UAAU,SACVa,KAAK,SACLF,YAAaA,EACbG,SAAUF,K,ICoCPG,E,YAxCb,aAAe,IAAD,8BACZ,+CAmBFH,eAAiB,SAACI,GAChB,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAnBtC,EAAKC,MAAQ,CACXd,SAAU,GACVW,YAAa,IAJH,E,iFAQO,IAAD,OAClBI,MAAM,8CACLC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAhB,GACJ,EAAKU,UAAS,WACZ,MAAO,CACLV,SAAUA,W,+BAUR,IAAD,EAC0BmB,KAAKL,MAA/Bd,EADA,EACAA,SAAUW,EADV,EACUA,YACZS,EAAmBpB,EAASqB,QAAO,SAAA7B,GACvC,OAAOA,EAAQK,KAAKyB,cAAcC,SAASZ,EAAYW,kBAEzD,OACC,yBAAK7B,UAAU,OACb,wBAAIA,UAAU,SAAd,oBACA,kBAACU,EAAD,CAAWC,YAAY,kBACvBC,eAAgBc,KAAKd,iBACrB,kBAACN,EAAD,CAAUC,SAAUoB,S,GAnCRI,IAAMC,WCAxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.b68c9459.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Card.styles.css'\r\n\r\nexport default function Card({ monster }) {\r\n    return (\r\n        <div className='card-container'>\r\n            <img src={`https://robohash.org/${monster.id}?set=set2&size=180x180`} alt='monster' />\r\n            <h3>{monster.name}</h3>\r\n            <p>{monster.email}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport './CardList.styles.css'\r\nimport Card from '../Card/Card'\r\n\r\nexport default function CardList({ monsters }) {\r\n    return (\r\n        <div className='card-list'>\r\n            {monsters.map(monster => {\r\n                return <Card key={monster.id} monster={monster} />\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport './SearchBox.styles.css'\r\n\r\nexport default function SearchBox({ placeholder, handleOnChange }) {\r\n    return (\r\n        <div>\r\n            <input\r\n            className='search' \r\n            type='search'\r\n            placeholder={placeholder}\r\n            onChange={handleOnChange}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport CardList from './components/CardList/CardList';\nimport SearchBox from './components/SearchBox/SearchBox';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      monsters: [],\n      searchfield: ''\n    }\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(res => res.json())\n    .then(monsters => {\n      this.setState(() => {\n        return {\n          monsters: monsters\n        }\n      })\n    })\n  }\n\n  handleOnChange = (e) => {\n    this.setState({ searchfield: e.target.value})\n  }\n\n  render() {\n   const { monsters, searchfield } = this.state\n   const filteredMonsters = monsters.filter(monster => {\n     return monster.name.toLowerCase().includes(searchfield.toLowerCase())\n   })\n   return (\n    <div className=\"App\">\n      <h1 className='title'>Monsters Rolodex</h1>\n      <SearchBox placeholder='search monsters'\n      handleOnChange={this.handleOnChange} />\n      <CardList monsters={filteredMonsters} />\n    </div>\n  ); \n  }\n}\n\nexport default App;\n\n// https://jsonplaceholder.typicode.com/users","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}